// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import mock "github.com/stretchr/testify/mock"
import servicesqs "github.com/aws/aws-sdk-go/service/sqs"
import sqs "github.com/applike/gosoline/pkg/sqs"

// Queue is an autogenerated mock type for the Queue type
type Queue struct {
	mock.Mock
}

// DeleteMessage provides a mock function with given fields: _a0
func (_m *Queue) DeleteMessage(_a0 string) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteMessageBatch provides a mock function with given fields: _a0
func (_m *Queue) DeleteMessageBatch(_a0 []string) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func([]string) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetArn provides a mock function with given fields:
func (_m *Queue) GetArn() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetName provides a mock function with given fields:
func (_m *Queue) GetName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetUrl provides a mock function with given fields:
func (_m *Queue) GetUrl() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Receive provides a mock function with given fields: _a0, _a1
func (_m *Queue) Receive(_a0 context.Context, _a1 int64) ([]*servicesqs.Message, error) {
	ret := _m.Called(_a0, _a1)

	var r0 []*servicesqs.Message
	if rf, ok := ret.Get(0).(func(context.Context, int64) []*servicesqs.Message); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*servicesqs.Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int64) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Send provides a mock function with given fields: _a0, _a1
func (_m *Queue) Send(_a0 context.Context, _a1 *sqs.Message) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *sqs.Message) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendBatch provides a mock function with given fields: _a0, _a1
func (_m *Queue) SendBatch(_a0 context.Context, _a1 []*sqs.Message) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []*sqs.Message) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
